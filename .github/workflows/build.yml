# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Compile

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - { runner: macos-latest,  os: darwin,  arch: amd64 }
#          - { runner: macos-latest,  os: darwin,  arch: arm64 }
#          - { runner: ubuntu-latest, os: linux,   arch: amd64 }
          - { runner: ubuntu-latest, os: linux,   arch: amd64 }
          - { runner: ubuntu-latest, os: windows, arch: amd64 }
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Build
        run: "go run build.go --os=${{ matrix.os }} --arch=${{ matrix.arch }}"

      - name: Get build output
        id: build
        run: cat output.txt >> $GITHUB_OUTPUT

      - name: Debug compilation
        run: echo "NEXTLAUNCH_VERSION=${{ steps.build.outputs.NEXTLAUNCH_VERSION }}"


  release:
    if: github.event_name == 'push'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.2
        with:
          name: *
          path: binaries

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: binaries

#      - name: Create Release
#        uses: softprops/action-gh-release@v1
#        with:
#          name: NextLaunch ${{ needs.build.outputs.version }}
#          tag_name: v${{ needs.build.outputs.version }}
#          files: "/*"
#          draft: true
#          prerelease: ${{ needs.build.outputs.version == 'dev-*' }}
#          generate_release_notes: true
