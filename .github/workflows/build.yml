# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Compile and Release

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - { runner: macos-latest,  os: darwin,  arch: amd64, tags: netcgo }
          - { runner: macos-latest,  os: darwin,  arch: arm64, tags: netcgo }
          - { runner: ubuntu-latest, os: linux,   arch: amd64, env: CGO_ENABLED=0 }
          - { runner: ubuntu-latest, os: linux,   arch: amd64, env: CGO_ENABLED=0 }
          - { runner: ubuntu-latest, os: windows, arch: amd64, env: CGO_ENABLED=0 }
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache: true

      - name: Build
        env: ${{ matrix.env }}
        run: go run build.go -os ${{ matrix.os }} -arch ${{ matrix.arch }} -tags ${{ matrix.tags }}

      - name: Upload a Build Artifact (Windows)
        uses: actions/upload-artifact@v3.1.2
        if: ${{ matrix.os == 'windows' }}
        with:
          name: NextLaunch-${{ matrix.os }}-${{ matrix.arch }}.exe
          path: NextLaunch-${{ matrix.os }}-${{ matrix.arch }}.exe
          retention-days: 1

      - name: Upload a Build Artifact (Other)
        uses: actions/upload-artifact@v3.1.2
        if: ${{ matrix.os != 'windows' }}
        with:
          name: NextLaunch-${{ matrix.os }}-${{ matrix.arch }}
          path: NextLaunch-${{ matrix.os }}-${{ matrix.arch }}
          retention-days: 1


  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.2

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: NextLaunch ${{ needs.pre-build.outputs.version }}
          tag_name: v${{ needs.pre-build.outputs.version }}
          files: |
            NextLaunch-linux-amd64/NextLaunch
            NextLaunch-windows-amd64.exe/NextLaunch.exe
            NextLaunch-macos-amd64/NextLaunch
          draft: true
          prerelease: ${{ needs.pre-build.outputs.prerelease }}
          generate_release_notes: true